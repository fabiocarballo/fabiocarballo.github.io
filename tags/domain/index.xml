<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Domain on Fábio Carballo</title><link>https://fabiocarballo.github.io/tags/domain/</link><description>Recent content in Domain on Fábio Carballo</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© {year}</copyright><lastBuildDate>Wed, 27 Oct 2021 13:18:20 +0200</lastBuildDate><atom:link href="https://fabiocarballo.github.io/tags/domain/index.xml" rel="self" type="application/rss+xml"/><item><title>The relationship between bad domain modeling and Hyrum's Law</title><link>https://fabiocarballo.github.io/blog/the_dangers_of_hyrum_law_in_domain_modelling/</link><pubDate>Wed, 27 Oct 2021 13:18:20 +0200</pubDate><guid>https://fabiocarballo.github.io/blog/the_dangers_of_hyrum_law_in_domain_modelling/</guid><description>I recently got to know about Hyrum&amp;rsquo;s Law, when reading Software Engineering at Google. This is an informal law that was raised in the early days of Google and states the following:
With a sufficient number of users of an API, it does not matter what you promise in the contract: all observable behaviors of your system will be dependend on by somebody
This law has several implications in different areas of software engineering, such as testing, deprecation, and domain modeling - and it directly impacts the code &amp;ldquo;maintainability&amp;rdquo; - since it indicates that the documented and tested behaviors may be a subset of all the expected behaviors.</description></item></channel></rss>